{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","phone","ContactForm","state","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","onFindName","onAddContact","alert","id","uuidv4","reset","validName","contacts","filter","contact","this","className","onSubmit","htmlFor","type","onChange","Component","ContactList","removeContactId","toLowerCase","startsWith","map","onClick","Filter","onFilter","defaultProps","App","addContact","newContact","prevState","findName","find","updateFilter","componentDidMount","parseJsonContacts","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","setItem","stringify","console","log","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.54b5883c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name:\"\",\r\n    phone:\"\"\r\n}\r\n\r\nexport default class ContactForm extends Component{\r\n\r\n    state={\r\n        ...INITIAL_STATE\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name] : value })\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        const { onFindName, onAddContact } = this.props;\r\n        const { name, phone } = this.state;\r\n\r\n        if(!name || !phone){\r\n            alert('Name or phone filed is empty.');\r\n            return false; \r\n        }\r\n\r\n        if( onFindName(name) != null){\r\n            alert(name + ' is already in contacts.');\r\n            return false;\r\n        }\r\n\r\n\r\n        onAddContact({id:uuidv4(), name:name, phone:phone});\r\n\r\n        this.reset();\r\n\r\n    }\r\n\r\n    validName = (name) => {\r\n        const { contacts } = this.props;\r\n        return contacts.filter((contact) => {\r\n            return contact.name === name\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ ...INITIAL_STATE });\r\n    };\r\n\r\n    render(){\r\n\r\n        const { name, phone } = this.state;\r\n        return (\r\n            \r\n            <form className=\"phonebook\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"name_1\">Name</label><br/>\r\n                <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={this.handleChange}/>\r\n                <br/>\r\n                <label htmlFor=\"phone_1\">Number</label><br/>\r\n                <input type=\"tel\" name=\"phone\" id=\"phone_1\" value={phone} onChange={this.handleChange}/>\r\n                <br/>\r\n                <br/>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n\r\n        );\r\n\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function ContactList({ filter, contacts, removeContactId }){\r\n    return(\r\n            <ul>\r\n                {\r\n                    contacts.filter(contact => {\r\n                        return contact.name.toLowerCase().startsWith(filter.toLowerCase());\r\n                    }).map(({id, name, phone}) => (\r\n                        <li key={id}><span> {name}: {phone} </span><button onClick={()=>{removeContactId(id)}}>Delete</button> </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Filter extends Component{\r\n    state = {\r\n        filter: this.props.filter\r\n    }\r\n\r\n    static defaultProps = {\r\n        filter:''\r\n    }\r\n\r\n    static propTypes = {\r\n        filter: PropTypes.string.isRequired\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n\r\n        this.setState({ filter: target.value });\r\n\r\n        const { onFilter } = this.props;\r\n\r\n        onFilter(target.value);\r\n\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n\r\n    render(){\r\n        const { filter } = this.state;\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"filter_1\">Find contacts by name</label><br/>\r\n                <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={this.handleChange} />\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\nexport default class App extends Component{\n\n    state = {\n        contacts: [],\n        filter: ''\n    }\n\n    addContact = (newContact) => {\n        this.setState(prevState => {\n            return{ contacts: [...prevState.contacts, newContact] }\n        })\n    }\n\n    findName = (name) => {\n        const { contacts } = this.state;\n        return contacts.find((contact) => {\n            return contact.name === name\n        })\n    }\n\n    updateFilter = (filter) =>{\n      this.setState({filter:filter})\n    }\n\n    removeContactId = (id) => {\n        this.setState(prevState => {\n            return {contacts: prevState.contacts.filter(contact => contact.id !== id)}\n        });\n    }\n\n    componentDidMount = () => {\n        const parseJsonContacts = JSON.parse(localStorage.getItem('CONTACTS'));\n\n        if(parseJsonContacts)\n        this.setState({contacts: parseJsonContacts})\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        const { contacts } = this.state;\n\n        if(contacts !== prevState.contacts){\n            localStorage.setItem('CONTACTS', JSON.stringify(contacts));\n        }\n    }\n\n    render(){\n\n        console.log(this.state);\n\n        const { contacts, filter } = this.state;\n\n        return (\n           <>   \n                <h2>Phonebook</h2>\n                <ContactForm onFindName={this.findName} onAddContact ={this.addContact} />\n\n                <h2>Contacts</h2>\n                <Filter filter={filter} onFilter={this.updateFilter} />\n                <ContactList contacts={contacts} filter={filter} removeContactId={this.removeContactId}/> \n           </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}