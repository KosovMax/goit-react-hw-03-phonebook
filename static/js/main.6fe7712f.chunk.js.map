{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","props","handleChange","target","name","value","setState","handleSubmit","evt","preventDefault","changePhonebook","state","contacts","number","findIsName","alert","push","id","uuidv4","clearAllInputs","find","contact","this","phonebook","styles","className","onSubmit","htmlFor","type","onChange","Component","defaultProps","ContactList","deleteContact","changeContacts","index","map","indexOf","splice","filter","toLowerCase","startsWith","onClick","Filter","console","log","changeFilter","Section","updatePhonebook","data","$this","Object","keys","forEach","k","v","updateFilter","updateContacts","componentDidUpdate","prevProps","prevState","snapshot","localStorage","setItem","JSON","stringify","parse","getItem","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6fe7712f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactForm_phonebook__3AzgY\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ContactForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            contacts: this.props.contacts,\r\n            name: this.props.name,\r\n            number: this.props.number\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        contacts: [],\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    static propTypes = {\r\n        contacts: PropTypes.array.isRequired,\r\n        name: PropTypes.string.isRequired,     \r\n        number: PropTypes.string.isRequired     \r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name] : value })\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        const { changePhonebook } = this.props;\r\n        const { name, contacts, number } = this.state;\r\n\r\n        if( this.findIsName(name) != null){\r\n            alert(name + ' is already in contacts.');\r\n            return false;\r\n        }\r\n\r\n        contacts.push({\r\n            id:uuidv4(), \r\n            name:name,\r\n            number:number\r\n        });\r\n\r\n        changePhonebook({\r\n            name:name,\r\n            number:number,\r\n            contacts:contacts\r\n        })\r\n\r\n        this.clearAllInputs();\r\n\r\n    }\r\n\r\n    clearAllInputs= () =>{\r\n        this.setState({ name: '' })\r\n        this.setState({ number: '' })\r\n    }\r\n\r\n    findIsName = (name) => {\r\n        const { contacts } = this.state;\r\n        return contacts.find((contact) => {\r\n            return contact.name === name\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const { name, number } = this.state;\r\n        const { phonebook } = styles;\r\n        return (\r\n            \r\n            <form className={phonebook} onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"name_1\">Name</label><br/>\r\n                <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={this.handleChange}/>\r\n                <br/>\r\n                <label htmlFor=\"number_1\">Number</label><br/>\r\n                <input type=\"number\" name=\"number\" id=\"number_1\" value={number} onChange={this.handleChange}/>\r\n                <br/>\r\n                <br/>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    deleteContact = (id) => {\r\n\r\n        const { contacts, changeContacts } = this.props;\r\n\r\n        const index = contacts.map(contact => { return contact.id; }).indexOf(id);\r\n        if(index != -1) contacts.splice(index, 1);\r\n        \r\n        changeContacts(contacts);\r\n    } \r\n\r\n    render(){\r\n        const { contacts, filter } = this.props;\r\n\r\n        return(\r\n                <ul>\r\n                    {\r\n                        contacts.filter(function(contact){\r\n                            return contact.name.toLowerCase().startsWith(filter.toLowerCase());\r\n                        }).map(contact => (\r\n                            <li key={contact.id}><span> {contact.name}: {contact.number} </span><button onClick={()=>{this.deleteContact(contact.id)}}>Delete</button> </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Filter extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            filter: this.props.filter\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        filter:''\r\n    }\r\n\r\n    static propTypes = {\r\n        filter: PropTypes.string.isRequired\r\n    }\r\n\r\n    handleChange = evt => {\r\n\r\n        console.log(\"filter\", evt.target.value)\r\n\r\n        this.setState({ filter: evt.target.value });\r\n\r\n        const { changeFilter } = this.props;\r\n\r\n        changeFilter(evt.target.value);\r\n\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n\r\n    render(){\r\n        const { filter } = this.state;\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"filter_1\">Find contacts by name</label><br/>\r\n                <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={this.handleChange} />\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\nexport default class Section extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            contacts: JSON.parse(localStorage.getItem('CONTACTS')) || [],\n            name: '',\n            number: '',\n            filter:''\n        }\n    }\n\n    updatePhonebook = (data) => {\n        const $this = this;\n        Object.keys(data).forEach(k => {\n            const v = data[k];\n            $this.setState({ [k]: v })\n        });\n    }\n\n    updateFilter = (filter) =>{\n      this.setState({filter:filter})\n    }\n\n    updateContacts = (contacts) => {\n      this.setState({contacts:contacts})\n    }\n\n    componentDidUpdate = (prevProps, prevState, snapshot) => {\n        // console.log(prevProps, prevState, snapshot);\n        localStorage.setItem( 'CONTACTS', JSON.stringify(prevState.contacts) );\n    }\n\n    render(){\n\n        console.log(this.state);\n\n        const { name, contacts, filter} = this.state;\n\n        return (\n           <>   \n                <h2>Phonebook</h2>\n                <ContactForm name={name} contacts={contacts} changePhonebook={this.updatePhonebook} />\n\n                <h2>Contacts</h2>\n                <Filter filter={filter} changeFilter={this.updateFilter} />\n                <ContactList filter={filter} contacts={contacts} changeContacts={this.updateContacts}/> \n           </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}